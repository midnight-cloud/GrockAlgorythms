package com.example.grockalgorithms.models

import com.example.grockalgorithms.R

data class Algorithm(
    val id: Int,
    val icon: Int,
    val title: String,
    val difficult: String,
    val description: String,

    ) {
    companion object {
        val list = listOf<Algorithm>(
            Algorithm(
                0,
                R.drawable.icon_alg,
                "Бинарный поиск",
                "log(n)",
                "Бинарный поиск — тип поискового алгоритма, который последовательно делит пополам заранее отсортированный массив данных, чтобы обнаружить нужный элемент. Другие его названия — двоичный поиск, метод половинного деления, дихотомия.\n" +
                        "            Основная последовательность действий алгоритма выглядит так:\n" +
                        "- Сортируем массив данных.\n" +
                        "- Делим его пополам и находим середину.\n" +
                        "- Сравниваем срединный элемент с заданным искомым элементом.\n" +
                        "- Если искомое число больше среднего — продолжаем поиск в правой части массива (если он отсортирован по возрастанию): делим ее пополам, повторяя пункт 3. Если же заданное число меньше — алгоритм продолжит поиск в левой части массива, снова возвращаясь к пункту 3.\n" +
                        "       "
            )
        )
    }
}
